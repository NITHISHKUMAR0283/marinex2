# Docker Compose configuration for FloatChat
# Production-ready multi-service setup for Smart India Hackathon 2025

version: '3.8'

services:
  # PostgreSQL Database with PostGIS
  postgres:
    image: postgis/postgis:15-3.3
    container_name: floatchat-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: floatchat
      POSTGRES_USER: floatchat
      POSTGRES_PASSWORD: floatchat123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/db-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U floatchat"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - floatchat-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: floatchat-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass floatchat123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - floatchat-network

  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: floatchat-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - DATABASE_URL=postgresql+asyncpg://floatchat:floatchat123@postgres:5432/floatchat
      - REDIS_URL=redis://:floatchat123@redis:6379/0
      - API_HOST=0.0.0.0
      - API_PORT=8000
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - floatchat-network

  # Streamlit Dashboard
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: floatchat-dashboard
    restart: unless-stopped
    ports:
      - "8501:8501"
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - API_BASE_URL=http://api:8000
    volumes:
      - ./data:/app/data
    depends_on:
      api:
        condition: service_healthy
    networks:
      - floatchat-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: floatchat-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - nginx_logs:/var/log/nginx
    depends_on:
      - api
      - dashboard
    networks:
      - floatchat-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: floatchat-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - floatchat-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: floatchat-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=floatchat123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - floatchat-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  floatchat-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16